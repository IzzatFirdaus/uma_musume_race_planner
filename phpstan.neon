# phpstan.neon
parameters:
    level: 5 # Good starting point, adjust as needed (0-8)
    paths:
        - . # Include the root directory
        - components # Include the components directory
    excludePaths:
        - vendor/*
        - assets/js/*
        - assets/css/*
        - '*.sql'
        - backup/*
        - scripts/*
        - includes/*
        - tests/* # Exclude tests from analysis

    # Crucial for resolving vendor classes and interfaces
    bootstrapFiles:
        - vendor/autoload.php
        - phpstan-bootstrap.php
        - phpstan-globals.php

    # Optional: Enable parallel processing for faster analysis on larger projects
    # You might need to install `php-parallel-lint/php-parallel-lint` for this to work
    # parallel:
    #    maximumNumberOfProcesses: 8 # Adjust based on your CPU cores

    # Optional: If you want to ignore specific errors from vendor packages (use with caution!)
    # This is a band-aid, not a fix for "class.notFound" errors if they persist.
    # It's better to fix the root cause (autoloading) first.
    # ignoreErrors:
    #     - '#Class Symfony\\Component\\VarDumper\\Dumper\\CliDumper not found\.#'
    #     - '#Call to an undefined method Symfony\\Component\\Console\\Helper\\HelperInterface::start\(\)\.#'
    #     # Add more patterns here if absolutely necessary for persistent vendor errors you can't fix
    #     # But ideally, you want to fix the underlying autoloading.

    # Optional: Treat PHPDoc types as certain (can reduce some false positives related to PHPDoc mismatches)
    treatPhpDocTypesAsCertain: false