// constants.js

// 🔹 Grade badge class mapping
export function getGradeBadgeClass(value) {
  const gradeMap = {
    // Grades
    "S+": "bg-primary",
    S: "bg-primary",
    "A+": "bg-success",
    A: "bg-success",
    "B+": "bg-info",
    B: "bg-info",
    "C+": "bg-warning text-dark",
    C: "bg-warning text-dark",
    "D+": "bg-orange",
    D: "bg-orange",
    "E+": "bg-danger",
    E: "bg-danger",
    "F+": "bg-dark",
    F: "bg-dark",
    "G+": "bg-secondary",
    G: "bg-secondary",

    // Plan Statuses
    Planning: "bg-warning text-dark",
    Active: "bg-success",
    Finished: "bg-primary",
    Draft: "bg-secondary",
    Abandoned: "bg-danger",
  };

  return gradeMap[value] || "bg-muted";
}

// 🔸 Prediction Icon Mapping
export function getPredictionIcon(prediction) {
  const iconMap = {
    "◎": "prediction-good",
    "⦾": "prediction-good",
    "○": "prediction-good",
    "△": "prediction-avg",
    X: "prediction-poor",
    "-": "prediction-secondary",
  };

  const cssClass = iconMap[prediction] || "prediction-secondary";
  return `<span class="fs-4 ${cssClass}">${prediction}</span>`;
}

// 🔸 Career Stages
export const careerStageOptions = [
  { value: "predebut", text: "Pre-Debut" },
  { value: "junior", text: "Junior Year" },
  { value: "classic", text: "Classic Year" },
  { value: "senior", text: "Senior Year" },
  { value: "finale", text: "Finale Season" },
];

// 🔸 Class Ranks
export const classOptions = [
  "debut",
  "maiden",
  "beginner",
  "bronze",
  "silver",
  "gold",
  "platinum",
  "star",
  "legend",
].map((v) => ({ value: v, text: v.charAt(0).toUpperCase() + v.slice(1) }));

// 🔸 Strategy Options
export const strategyOptions = [
  { value: "front", text: "Front" },
  { value: "pace", text: "Pace" },
  { value: "late", text: "Late" },
  { value: "end", text: "Endurance" },
];

// 🔸 Mood Status Options
export const moodOptions = [
  { value: "great", text: "Great" },
  { value: "good", text: "Good" },
  { value: "normal", text: "Normal" },
  { value: "bad", text: "Bad" },
  { value: "awful", text: "Awful" },
];

// 🔸 Grade Options
export const attributeGradeOptions = [
  "S+",
  "S",
  "A+",
  "A",
  "B+",
  "B",
  "C+",
  "C",
  "D+",
  "D",
  "E+",
  "E",
  "F+",
  "F",
  "G+",
  "G",
];
export const simpleGradeOptions = ["S", "A", "B", "C", "D", "E", "F", "G"];

// 🔸 Prediction Symbols
export const predictionIconOptions = ["◎", "⦾", "○", "△", "X", "-"];

// 🔸 Race Environment
export const terrainTypeOptions = ["Dirt", "Turf"];
export const distanceTypeOptions = ["Sprint", "Mile", "Medium", "Long"];
export const styleTypeOptions = ["Front", "Pace", "Late", "End"];

// 🔸 Time of Day + Month
export const timeOfDayOptions = ["Early", "Late"];
export const monthOptions = [
  "Jan",
  "Feb",
  "Mar",
  "Apr",
  "May",
  "Jun",
  "Jul",
  "Aug",
  "Sep",
  "Oct",
  "Nov",
  "Dec",
];

// 🔸 Skills — Auto-Suggest with Searchable Tags
export const skillsList = [
  {
    name: "Acceleration",
    description: "Pass burst mid-race",
    type: "🔺 Acceleration",
    bestFor: "Front or passing builds",
  },
  {
    name: "Calm in a Crowd",
    description: "Recovery when boxed-in crowded runs",
    type: "🔋 Recovery",
    bestFor: "Pack runners",
  },
  {
    name: "Competitive Spirit",
    description: "Plus 40 Power when leading",
    type: "🔺 Power",
    bestFor: "Daiwa Scarlet",
  },
  {
    name: "Corazón Ardiente Lv.2",
    description: "Final-stretch burst in mid/long-distance races",
    type: "🔺 Acceleration",
    bestFor: "El Pasa Condor",
  },
  {
    name: "Corner Acceleration",
    description: "Corner-speed burst",
    type: "🔺 Acceleration",
    bestFor: "Corner maneuverers",
  },
  {
    name: "Corner Adept",
    description: "Slight speed boost on corners",
    type: "🔺 Speed",
    bestFor: "All-rounders",
  },
  {
    name: "Corner Connoisseur",
    description: "Acceleration through corners",
    type: "🔺 Acceleration",
    bestFor: "Cornered racers",
  },
  {
    name: "Early Lead",
    description: "Early front-break burst",
    type: "🔺 Speed",
    bestFor: "Front-runner builds",
  },
  {
    name: "Extra Tank",
    description: "Regain energy after fatigue",
    type: "🔋 Recovery",
    bestFor: "Endurance-focused runners",
  },
  {
    name: "Fast & Furious",
    description: "Mid-race speed boost",
    type: "🔺 Speed",
    bestFor: "Pace/Front runners",
  },
  {
    name: "Final Push",
    description: "Maintain lead on final corner",
    type: "🔺 Acceleration",
    bestFor: "Daiwa Scarlet, front runners",
  },
  {
    name: "Flustered Late Surgers",
    description: "Debuff late-chaser opponents",
    type: "⛔ Debuff",
    bestFor: "Lead protect builds",
  },
  {
    name: "Frenzied End Closers",
    description: "Debuff late-chasers in end stretch",
    type: "⛔ Debuff",
    bestFor: "Preserve lead late-race",
  },
  {
    name: "Frenzied Front Runners",
    description: "Debuff front-pack competition",
    type: "⛔ Debuff",
    bestFor: "Front-running builds",
  },
  {
    name: "Front Runner Corners",
    description: "Speed boost on corners when leading",
    type: "🔺 Speed",
    bestFor: "Daiwa Scarlet",
  },
  {
    name: "Front Runner Straightaways",
    description: "Speed boost on straights when leading",
    type: "🔺 Speed",
    bestFor: "Daiwa Scarlet",
  },
  {
    name: "Go With The Flow",
    description: "Late-race positioning aid",
    type: "🔺 Positioning",
    bestFor: "Teio-focused runners",
  },
  {
    name: "Groundwork",
    description: "Recovers a small amount of stamina early in the race",
    type: "🔋 Recovery",
    bestFor: "Gold Ship, front‑loaded endurance builds",
  },
  {
    name: "Hesitant Late Surgers",
    description: "Debuff tired late runners",
    type: "⛔ Debuff",
    bestFor: "Lead protect builds",
  },
  {
    name: "Hydrate",
    description: "Mid-race stamina recovery",
    type: "🔋 Recovery",
    bestFor: "All runners",
  },
  {
    name: "I Can See Right Through You",
    description: "Widened view when moving laterally, avoids crowding",
    type: "⛔ Debuff",
    bestFor: "Gold Ship, tactical positioning",
  },
  {
    name: "Inner Post Proficiency",
    description: "Passive boost if bracket 1–3",
    type: "📊 Passive",
    bestFor: "Position-aware runners",
  },
  {
    name: "Inside Scoop",
    description: "Corner boost when near inner rail",
    type: "🔺 Acceleration",
    bestFor: "Corner-savvy runners",
  },
  {
    name: "Intense Gaze",
    description: "Stronger late race debuff",
    type: "⛔ Debuff",
    bestFor: "Competitive finishes",
  },
  {
    name: "Iron Will",
    description: "Recovery in crowded tracks early-race",
    type: "🔋 Recovery",
    bestFor: "Pack runners",
  },
  {
    name: "Late Surger Savvy",
    description: "Assist positioning for late runners",
    type: "🔺 Positioning",
    bestFor: "Vodka",
  },
  {
    name: "Lay Low",
    description: "Fatigue recovery when boxed-in early",
    type: "🔋 Recovery",
    bestFor: "Pack runners",
  },
  {
    name: "Level Headed",
    description: "Regain composure amid jam mid-race",
    type: "🔋 Recovery",
    bestFor: "All runners",
  },
  {
    name: "Lucky Seven",
    description: "Random boost if in bracket 7",
    type: "🌀 Passive",
    bestFor: "Gacha-starred runners",
  },
  {
    name: "Medium Corners",
    description: "Corner boost on medium tracks",
    type: "🔺 Acceleration",
    bestFor: "Multi-distance runners",
  },
  {
    name: "Nimble Navigator",
    description: "Improved maneuver in final spurt",
    type: "🔺 Positioning",
    bestFor: "Vodka, Teio",
  },
  {
    name: "Outer Post Proficiency",
    description: "Passive boost if bracket 6–8",
    type: "📊 Passive",
    bestFor: "Bracket-dependent runners",
  },
  {
    name: "Pace Chaser Savvy",
    description: "Boosts positioning when closing from mid‑pack",
    type: "🔺 Positioning",
    bestFor: "Daiwa Scarlet, hybrid front/pace builds",
  },
  {
    name: "Pace Chaser Straightaways",
    description: "Straight-line burst when pacing up from behind",
    type: "🔺 Acceleration",
    bestFor: "Mid-pack / passers",
  },
  {
    name: "Pace Strategy",
    description:
      "Increases speed when running at a moderate pace (not leading)",
    type: "🔺 Speed",
    bestFor: "Daiwa Scarlet, pace‑chaser fallback",
  },
  {
    name: "Position Pilfer",
    description: "Mid-race speed increase when in front",
    type: "🔺 Speed",
    bestFor: "Pace/Front runners",
  },
  {
    name: "Preferred Position",
    description: "Reduce mid-race stamina loss",
    type: "🔋 Recovery",
    bestFor: "Front or Pace runners",
  },
  {
    name: "Prepared to Pass",
    description: "Burst in final corner for front packing",
    type: "🔺 Acceleration",
    bestFor: "Front runners",
  },
  {
    name: "Pressure",
    description: "Slight speed boost when passing another horse",
    type: "🔺 Acceleration",
    bestFor: "Gold Ship, End‑Closer builds",
  },
  {
    name: "Productive Plan",
    description: "Early lead stamina boost",
    type: "🔋 Recovery",
    bestFor: "Front-runner builds",
  },
  {
    name: "Prudent Positioning",
    description: "Early-race position-keeping boost",
    type: "🔺 Positioning",
    bestFor: "Position and front runners",
  },
  {
    name: "Rainy Days",
    description: "Performance boost in rainy weather",
    type: "📊 Passive",
    bestFor: "Versatile runners",
  },
  {
    name: "Red Ace Lv.2",
    description: "Speed boost in 2nd half when lead",
    type: "🔺 Speed",
    bestFor: "Daiwa Scarlet",
  },
  {
    name: "Red Shift/LP1211‑M Lv.1",
    description: "Corner burst when leading in final corner or later",
    type: "🔺 Acceleration",
    bestFor: "Daiwa Scarlet, Maruzensky",
  },
  {
    name: "Rosy Outlook",
    description: "Stem stamina loss when leading",
    type: "🔋 Recovery",
    bestFor: "Front-runners like Scarlet",
  },
  {
    name: "Shake It Out",
    description: "Recover fatigue after multiple skills",
    type: "🔋 Recovery",
    bestFor: "Skill-heavy builds",
  },
  {
    name: "Sharp Gaze",
    description: "Debuff opponents ahead late-race",
    type: "⛔ Debuff",
    bestFor: "Competitive finishes",
  },
  {
    name: "Shifting Gears",
    description: "Mid-race pass acceleration",
    type: "🔺 Acceleration",
    bestFor: "Front runners",
  },
  {
    name: "Shrewd Step",
    description: "Improved navigation",
    type: "🔺 Positioning",
    bestFor: "All runners",
  },
  {
    name: "Sky‑High Teio Step Lv.1",
    description: "Closing-speed boost on final straight",
    type: "🔺 Acceleration",
    bestFor: "Tokai Teio",
  },
  {
    name: "Slick Surge",
    description: "Late-race acceleration boost",
    type: "🔺 Acceleration",
    bestFor: "Vodka",
  },
  {
    name: "Slipstream",
    description: "Reduce wind drag following another",
    type: "🔺 Acceleration",
    bestFor: "Pacer / stalkers",
  },
  {
    name: "Soft Step",
    description: "Sideways movement stamina recovery",
    type: "🔋 Recovery",
    bestFor: "Pack or multi-strategists",
  },
  {
    name: "Stamina To Spare",
    description: "Reduce early-race stamina loss",
    type: "🔋 Recovery",
    bestFor: "Long-distance runners",
  },
  {
    name: "Straightaway Adept",
    description: "Straight-speed burst",
    type: "🔺 Speed",
    bestFor: "Front or pace strategies",
  },
  {
    name: "Straightaway Recovery",
    description: "Recover stamina on straight segments",
    type: "🔋 Recovery",
    bestFor: "Long-distance runners",
  },
  {
    name: "Straightaway Spurt",
    description: "Final straight acceleration burst",
    type: "🔺 Acceleration",
    bestFor: "Vodka",
  },
  {
    name: "Studious",
    description: "Improves observation mid-race",
    type: "👁️ Wit boost",
    bestFor: "All runners",
  },
  {
    name: "Thunderbolt Step",
    description: "Avoid being boxed in back-mid race",
    type: "🔺 Positioning",
    bestFor: "Pack movers",
  },
  {
    name: "Trick (Front)",
    description: "Fatigue opponents behind",
    type: "⛔ Debuff",
    bestFor: "Daiwa Scarlet, El Pasa Condor",
  },
  {
    name: "Trick (Rear)",
    description: "Debuff racers when boxed behind",
    type: "⛔ Debuff",
    bestFor: "Strategic lead builds",
  },
];

// 🔸 Skill Tags Derived
export const skillTagOptions = Array.from(
  new Set(skillsList.map((s) => s.type))
).map((type) => ({ value: type, text: type }));
